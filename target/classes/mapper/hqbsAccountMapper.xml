<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
    <mapper namespace="HqbsAccountMapper">
    <resultMap type="QqbsAccountEntity" id="BrandMap">
    	<id column="id" property="id" />
    	<result column="account_id" property="accountId" />
    	<result column="open_id" property="openId" />
		<result column="union_id" property="unionId" />
    	<result column="father_account_id" property="fatherAccountId" />
    	<result column="image" property="image" />
    	<result column="nickname" property="nickName" />
    	<result column="spokes_person" property="spokesPerson" />
    	<result column="subscribe" property="subscribe" />
    	<result column="has_persistent_qrcode" property="hasPersistentQRCode" />
    	<result column="create_time" property="createTime" />
    </resultMap>
     <sql id="AccountQuery">
		id as id,
		account_id as accountId ,
		open_id as openId,
		union_id as unionId,
		father_account_id as fatherAccountId,
		image as image,
		nickname as nickName,
		subscribe as subscribe,
		spokes_person as spokesPerson,
		has_persistent_qrcode as hasPersistentQRCode,
		create_time as createTime,
		update_time as updateTime
     </sql>
     <select id="findAccountByOpenId" parameterType="string" resultType="QqbsAccountEntity">
         SELECT
          <include refid="AccountQuery"></include>
         FROM qqbs_account WHERE open_id=#{openId} LIMIT 1
     </select>
     <update id="updateAccoun" parameterType="QqbsAccountEntity">
        update qqbs_account
        <set>
            <if test="nickName != null" >nickname = #{nickName},</if>
            <if test="image != null" >image = #{image},</if>
             update_time = now(),
            <if test="subscribe != null" >subscribe = #{subscribe},</if>
            <if test="unionId != null" >union_id = #{unionId}</if>
        </set>
        where id=#{id}
	</update>
     <insert id="insertQqbsAccount" parameterType="QqbsAccountEntity"
		useGeneratedKeys="true" keyProperty="id">
        	insert into qqbs_account(account_id,open_id,union_id,father_account_id,image,nickname,subscribe,create_time) 
        	values(#{accountId},#{openId},#{unionId},#{fatherAccountId},#{image},#{nickName},#{subscribe},now())
	</insert>
	
    <select id="getAccounByUnionId" parameterType="string" resultType="QqbsAccountEntity">
     	SELECT
        	<include refid="AccountQuery"></include>
        FROM qqbs_account WHERE open_id=#{openId} LIMIT 1
	</select>
	<select id="getfans" parameterType="map"  resultMap="BrandMap">
     	SELECT * FROM `qqbs_account` 
     	where 1=1 
     	<if test="fatherAccountId != null">AND father_account_id=#{fatherAccountId}</if>
     </select>
	<select id="findAccountByAccountId" parameterType="int" resultType="QqbsAccountEntity">
         SELECT
          <include refid="AccountQuery"></include>
         FROM qqbs_account WHERE account_id=#{accountId} LIMIT 1
     </select>
     <update id="updateAccounSpread" parameterType="map">
        update qqbs_account set father_account_id = #{fatherAccountId} where id=#{id}
	</update>
</mapper>  